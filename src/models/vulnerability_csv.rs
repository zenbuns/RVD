// src/models/vulnerability_record.rs

use serde::Deserialize;
use super::vulnerability::Vulnerability;

#[derive(Debug, Deserialize)]
pub struct VulnerabilityRecord {
	#[serde(rename = "Name")]
	pub cve_id: String,

	#[serde(rename = "Status")]
	pub severity: String,

	#[serde(rename = "Description")]
	pub description: String,

	#[serde(rename = "References")]
	pub references: String,

	#[serde(rename = "Phase")]
	pub phase: String,

	#[serde(rename = "Votes")]
	pub votes: String,

	#[serde(rename = "Comments")]
	pub comments: String,
}

impl From<VulnerabilityRecord> for Vulnerability {
	fn from(record: VulnerabilityRecord) -> Self {
		Self {
			vulnerability_id: None,
			cve_id: record.cve_id,
			description: Some(record.description),
			severity: record.severity,
			impact: Some(record.votes),
			mitigation: Some(record.comments),
			published_date: None,
		}
	}
}